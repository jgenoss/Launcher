# üéÆ Launcher Admin Panel

[![Python](https://img.shields.io/badge/Python-3.7+-blue?style=for-the-badge&logo=python)](https://python.org)
[![Flask](https://img.shields.io/badge/Flask-2.3+-green?style=for-the-badge&logo=flask)](https://flask.palletsprojects.com)
[![Bootstrap](https://img.shields.io/badge/Bootstrap-5.3-purple?style=for-the-badge&logo=bootstrap)](https://getbootstrap.com)
[![License](https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge)](LICENSE)

**Panel de administraci√≥n web completo para gestionar actualizaciones, archivos y versiones de tu launcher de juegos.**

![Dashboard Preview](docs/images/dashboard-preview.png)

## üìã Tabla de Contenidos

- [Caracter√≠sticas](#-caracter√≠sticas)
- [Capturas de Pantalla](#-capturas-de-pantalla)
- [Instalaci√≥n R√°pida](#-instalaci√≥n-r√°pida)
- [Instalaci√≥n Manual](#-instalaci√≥n-manual)
- [Configuraci√≥n](#-configuraci√≥n)
- [Uso](#-uso)
- [API Documentation](#-api-documentation)
- [Integraci√≥n con Launcher C#](#-integraci√≥n-con-launcher-c)
- [Docker](#-docker)
- [Contribuir](#-contribuir)
- [Licencia](#-licencia)
- [Soporte](#-soporte)

## ‚ú® Caracter√≠sticas

### üöÄ Gesti√≥n Completa
- **Versiones del Juego**: Crear, gestionar y activar diferentes versiones
- **Archivos del Juego**: Subida masiva con verificaci√≥n MD5 autom√°tica
- **Paquetes de Actualizaci√≥n**: Creaci√≥n de ZIPs con secuenciamiento autom√°tico
- **Launcher Management**: Gesti√≥n de versiones del propio launcher

### üìä Monitoreo y Estad√≠sticas
- **Dashboard en Tiempo Real**: Estad√≠sticas de uso y descargas
- **Logs Detallados**: Seguimiento completo de todas las descargas
- **Gr√°ficos Interactivos**: Visualizaci√≥n de datos con Chart.js
- **Alertas Autom√°ticas**: Notificaciones de errores y eventos importantes

### üîê Seguridad y Control
- **Autenticaci√≥n Segura**: Sistema de login con sesiones encriptadas
- **Control de Acceso**: Diferentes niveles de permisos de usuario
- **Rate Limiting**: Protecci√≥n contra abuso de API
- **Validaci√≥n de Archivos**: Verificaci√≥n de integridad con MD5

### üé® Interfaz Moderna
- **Responsive Design**: Compatible con desktop, tablet y m√≥vil
- **Bootstrap 5**: Interfaz moderna y profesional
- **Tema Oscuro/Claro**: Soporte para m√∫ltiples temas
- **Animaciones Suaves**: Experiencia de usuario fluida

### üîß API Completa
- **RESTful API**: Endpoints para todas las funcionalidades
- **Documentaci√≥n OpenAPI**: Swagger UI integrado
- **Webhooks**: Integraci√≥n con Discord, Slack y otros servicios
- **Versionado**: API versionada para compatibilidad

### üì± Sistema de Mensajes
- **Noticias del Juego**: Sistema de mensajes para el launcher
- **Prioridades**: Gesti√≥n de importancia de mensajes
- **Tipos Personalizados**: Actualizaciones, eventos, mantenimiento, etc.
- **Vista Previa**: Simulaci√≥n en tiempo real del launcher

## üì∏ Capturas de Pantalla

### Dashboard Principal
![Dashboard](docs/images/dashboard.png)

### Gesti√≥n de Versiones
![Versions](docs/images/versions.png)

### Subida de Archivos
![Upload](docs/images/upload.png)

### Logs de Descarga
![Logs](docs/images/logs.png)

## üöÄ Instalaci√≥n R√°pida

### Usando el Script Autom√°tico (Recomendado)

```bash
# Clonar el repositorio
git clone https://github.com/tu-usuario/launcher-admin-panel.git
cd launcher-admin-panel

# Ejecutar script de instalaci√≥n
chmod +x setup.sh
./setup.sh

# Iniciar el servidor
source venv/bin/activate
python run.py
```

### Usando Docker (M√°s R√°pido)

```bash
# Clonar y ejecutar con Docker Compose
git clone https://github.com/tu-usuario/launcher-admin-panel.git
cd launcher-admin-panel

# Iniciar todos los servicios
docker-compose up -d

# Ver logs
docker-compose logs -f launcher-admin
```

## üîß Instalaci√≥n Manual

### Prerrequisitos

- Python 3.7 o superior
- pip (gestor de paquetes de Python)
- Git

### Pasos Detallados

1. **Clonar el repositorio**
   ```bash
   git clone https://github.com/tu-usuario/launcher-admin-panel.git
   cd launcher-admin-panel
   ```

2. **Crear entorno virtual**
   ```bash
   python -m venv venv
   
   # En Windows
   venv\Scripts\activate
   
   # En Linux/macOS
   source venv/bin/activate
   ```

3. **Instalar dependencias**
   ```bash
   pip install --upgrade pip
   pip install -r requirements.txt
   ```

4. **Configurar entorno**
   ```bash
   cp .env.example .env
   # Editar .env con tu configuraci√≥n
   ```

5. **Inicializar base de datos**
   ```bash
   python install.py
   ```

6. **Iniciar la aplicaci√≥n**
   ```bash
   python run.py
   ```

7. **Acceder al panel**
   - URL: http://localhost:5000
   - Usuario: `admin`
   - Contrase√±a: `admin123`

## ‚öôÔ∏è Configuraci√≥n

### Variables de Entorno Principales

```bash
# Configuraci√≥n b√°sica
FLASK_ENV=development
SECRET_KEY=tu-clave-secreta-muy-segura
PORT=5000

# Base de datos
DATABASE_URL=sqlite:///launcher_admin.db
# Para PostgreSQL: postgresql://user:pass@host:port/db

# Archivos
UPLOAD_FOLDER=uploads
MAX_CONTENT_LENGTH=524288000  # 500MB

# URLs del launcher
LAUNCHER_URL_BASE=http://tu-dominio.com/Launcher

# Seguridad
FORCE_HTTPS=false
ENABLE_RATE_LIMIT=true
API_RATE_LIMIT=100

# Notificaciones
NOTIFICATION_ENABLED=false
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...
```

### Configuraci√≥n de Base de Datos

#### SQLite (Desarrollo)
```bash
DATABASE_URL=sqlite:///launcher_admin.db
```

#### PostgreSQL (Producci√≥n Recomendada)
```bash
DATABASE_URL=postgresql://usuario:contrase√±a@host:5432/launcher_db
```

#### MySQL
```bash
DATABASE_URL=mysql://usuario:contrase√±a@host:3306/launcher_db
```

### Configuraci√≥n de Nginx (Producci√≥n)

```nginx
server {
    listen 80;
    server_name tu-dominio.com;
    
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /Launcher/ {
        alias /path/to/launcher-admin-panel/uploads/;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }
}
```

## üìñ Uso

### 1. Gesti√≥n de Versiones

1. **Crear Nueva Versi√≥n**
   - Ve a `Versiones del Juego` ‚Üí `Nueva Versi√≥n`
   - Ingresa n√∫mero de versi√≥n (ej: 1.0.0.0)
   - A√±ade notas de la versi√≥n
   - Marca como "Versi√≥n actual" si es necesario

2. **Subir Archivos**
   - Ve a `Archivos del Juego` ‚Üí `Subir Archivos`
   - Selecciona la versi√≥n
   - Arrastra archivos o usa el selector
   - Configura rutas relativas
   - Los hashes MD5 se calculan autom√°ticamente

3. **Crear Paquete de Actualizaci√≥n**
   - Ve a `Paquetes de Actualizaci√≥n` ‚Üí `Crear Actualizaci√≥n`
   - Selecciona la versi√≥n
   - Sube un archivo ZIP con los archivos modificados
   - El sistema genera autom√°ticamente `update_X.X.X.X.zip`

### 2. Gesti√≥n del Launcher

1. **Subir Nueva Versi√≥n del Launcher**
   - Ve a `Versiones del Launcher` ‚Üí `Subir Nueva Versi√≥n`
   - Sube el archivo .exe del launcher
   - Configura como versi√≥n actual
   - El sistema actualiza autom√°ticamente `launcher_update.json`

### 3. Sistema de Mensajes

1. **Crear Mensajes para el Launcher**
   - Ve a `Mensajes y Noticias` ‚Üí `Nuevo Mensaje`
   - Selecciona tipo (Actualizaci√≥n, Noticia, Evento, etc.)
   - Escribe el mensaje (m√°x. 500 caracteres)
   - Configura prioridad (1-5)
   - Activa/desactiva seg√∫n necesidad

### 4. Monitoreo

1. **Dashboard**: Vista general con estad√≠sticas en tiempo real
2. **Logs de Descarga**: Seguimiento detallado de todas las descargas
3. **Configuraci√≥n**: Ajustes del sistema y notificaciones

## üîå API Documentation

### Endpoints Principales

#### Informaci√≥n del Launcher
```http
GET /api/launcher_update.json
```
Respuesta:
```json
{
  "version": "1.0.0.2",
  "file_name": "LC.exe"
}
```

#### Informaci√≥n de Actualizaciones del Juego
```http
GET /api/update.json
```
Respuesta:
```json
{
  "latest_version": "1.0.0.3",
  "updates": [
    "update_1.0.0.0.zip",
    "update_1.0.0.1.zip",
    "update_1.0.0.2.zip",
    "update_1.0.0.3.zip"
  ],
  "file_hashes": [
    {
      "FileName": "Nksp.exe",
      "MD5Hash": "d41d8cd98f00b204e9800998ecf8427e",
      "RelativePath": "bin/Nksp.exe"
    }
  ]
}
```

#### Mensajes del Launcher
```http
GET /api/message.json
```
Respuesta:
```json
[
  {
    "type": "Actualizaci√≥n",
    "message": "Nueva funcionalidad agregada."
  },
  {
    "type": "Noticia",
    "message": "¬°Evento especial este fin de semana!"
  }
]
```

#### Estado de la API
```http
GET /api/status
```

#### Estad√≠sticas
```http
GET /api/stats
```

### Descargas de Archivos

```http
# Descargar paquete de actualizaci√≥n
GET /Launcher/updates/update_1.0.0.3.zip

# Descargar archivo del juego
GET /Launcher/files/Nksp.exe

# Descargar launcher
GET /Launcher/LC.exe

# Banner HTML
GET /Launcher/banner.html
```

## üéØ Integraci√≥n con Launcher C#

### Configuraci√≥n en el Launcher

```csharp
private string Urls = "http://tu-dominio.com/Launcher/";
private string UrbBanner = "http://tu-dominio.com/Launcher/banner.html";
```

### Verificaci√≥n de Actualizaciones

El launcher C# debe consultar estos endpoints:

1. **Actualizaci√≥n del Launcher**: `/api/launcher_update.json`
2. **Actualizaciones del Juego**: `/api/update.json`
3. **Mensajes**: `/api/message.json`
4. **Banner**: `/Launcher/banner.html`

### Flujo de Actualizaci√≥n

1. Launcher consulta `/api/update.json`
2. Compara versi√≥n local con `latest_version`
3. Si hay actualizaci√≥n, descarga los ZIPs necesarios desde `/Launcher/updates/`
4. Verifica integridad con MD5 de `file_hashes`
5. Extrae archivos y actualiza el juego

## üê≥ Docker

### Docker Compose (Recomendado)

```bash
# Iniciar todos los servicios
docker-compose up -d

# Solo la aplicaci√≥n
docker-compose up launcher-admin

# Con base de datos PostgreSQL
docker-compose --profile with-postgres up -d

# Con Nginx
docker-compose --profile with-nginx up -d

# Backup de base de datos
docker-compose --profile backup run backup

# Ver logs
docker-compose logs -f

# Detener servicios
docker-compose down
```

### Docker Manual

```bash
# Construir imagen
docker build -t launcher-admin-panel .

# Ejecutar contenedor
docker run -d \
  --name launcher-admin \
  -p 5000:5000 \
  -v $(pwd)/uploads:/app/uploads \
  -v $(pwd)/logs:/app/logs \
  -e SECRET_KEY=tu-clave-secreta \
  launcher-admin-panel
```

### Variables de Entorno Docker

```yaml
environment:
  - FLASK_ENV=production
  - SECRET_KEY=clave-super-secreta
  - DATABASE_URL=postgresql://user:pass@db:5432/launcher_db
  - WORKERS=4
```

## üîÑ Backup y Restauraci√≥n

### Backup Autom√°tico

```bash
# Configurar en .env
BACKUP_ENABLED=true
BACKUP_INTERVAL=3600  # 1 hora
BACKUP_RETENTION_DAYS=30
```

### Backup Manual

```bash
# Base de datos SQLite
cp launcher_admin.db backups/backup_$(date +%Y%m%d_%H%M%S).db

# Base de datos PostgreSQL
pg_dump launcher_db > backups/backup_$(date +%Y%m%d_%H%M%S).sql

# Archivos
tar -czf backups/files_$(date +%Y%m%d_%H%M%S).tar.gz uploads/
```

### Restauraci√≥n

```bash
# SQLite
cp backups/backup_YYYYMMDD_HHMMSS.db launcher_admin.db

# PostgreSQL
psql launcher_db < backups/backup_YYYYMMDD_HHMMSS.sql
```

## üõ†Ô∏è Desarrollo

### Configuraci√≥n de Desarrollo

```bash
# Instalar dependencias de desarrollo
pip install -r requirements-dev.txt

# Ejecutar tests
python -m pytest

# Ejecutar con auto-reload
FLASK_ENV=development python run.py

# Formatear c√≥digo
black .
isort .

# Linting
flake8 .
pylint app/
```

### Estructura del Proyecto

```
launcher-admin-panel/
‚îú‚îÄ‚îÄ app.py                 # Aplicaci√≥n principal Flask
‚îú‚îÄ‚îÄ models.py              # Modelos de base de datos
‚îú‚îÄ‚îÄ api_routes.py          # Rutas de la API
‚îú‚îÄ‚îÄ admin_routes.py        # Rutas del panel admin
‚îú‚îÄ‚îÄ utils.py               # Utilidades y helpers
‚îú‚îÄ‚îÄ config.py              # Configuraci√≥n
‚îú‚îÄ‚îÄ run.py                 # Script de inicio
‚îú‚îÄ‚îÄ install.py             # Script de instalaci√≥n
‚îú‚îÄ‚îÄ requirements.txt       # Dependencias Python
‚îú‚îÄ‚îÄ Dockerfile            # Configuraci√≥n Docker
‚îú‚îÄ‚îÄ docker-compose.yml    # Orquestaci√≥n Docker
‚îú‚îÄ‚îÄ setup.sh              # Script de instalaci√≥n autom√°tica
‚îú‚îÄ‚îÄ .env.example          # Ejemplo de configuraci√≥n
‚îú‚îÄ‚îÄ templates/            # Plantillas HTML
‚îÇ   ‚îú‚îÄ‚îÄ base.html
‚îÇ   ‚îú‚îÄ‚îÄ login.html
‚îÇ   ‚îî‚îÄ‚îÄ admin/
‚îÇ       ‚îú‚îÄ‚îÄ dashboard.html
‚îÇ       ‚îú‚îÄ‚îÄ versions.html
‚îÇ       ‚îú‚îÄ‚îÄ files.html
‚îÇ       ‚îú‚îÄ‚îÄ uploads.html
‚îÇ       ‚îú‚îÄ‚îÄ messages.html
‚îÇ       ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ static/               # Archivos est√°ticos
‚îÇ   ‚îî‚îÄ‚îÄ downloads/
‚îÇ       ‚îî‚îÄ‚îÄ banner.html
‚îú‚îÄ‚îÄ uploads/              # Archivos subidos
‚îÇ   ‚îú‚îÄ‚îÄ files/
‚îÇ   ‚îî‚îÄ‚îÄ updates/
‚îú‚îÄ‚îÄ logs/                 # Archivos de log
‚îú‚îÄ‚îÄ backups/              # Backups autom√°ticos
‚îî‚îÄ‚îÄ docs/                 # Documentaci√≥n
```

## üß™ Testing

### Ejecutar Tests

```bash
# Todos los tests
python -m pytest

# Tests espec√≠ficos
python -m pytest tests/test_api.py

# Con cobertura
python -m pytest --cov=app

# Tests de integraci√≥n
python -m pytest tests/integration/
```

### Tests Incluidos

- **Tests de API**: Verificaci√≥n de todos los endpoints
- **Tests de Modelos**: Validaci√≥n de base de datos
- **Tests de Upload**: Subida de archivos
- **Tests de Seguridad**: Autenticaci√≥n y autorizaci√≥n
- **Tests de Integraci√≥n**: Flujo completo de actualizaci√≥n

## üìö Documentaci√≥n Adicional

- [Gu√≠a de Instalaci√≥n Detallada](docs/installation.md)
- [Configuraci√≥n Avanzada](docs/configuration.md)
- [API Reference](docs/api.md)
- [Troubleshooting](docs/troubleshooting.md)
- [Contributing Guidelines](docs/contributing.md)
- [Changelog](CHANGELOG.md)

## ü§ù Contribuir

¬°Las contribuciones son bienvenidas! Por favor:

1. Fork el proyecto
2. Crea una rama para tu feature (`git checkout -b feature/nueva-funcionalidad`)
3. Commit tus cambios (`git commit -am 'A√±adir nueva funcionalidad'`)
4. Push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Abre un Pull Request

### Reportar Bugs

Si encuentras un bug, por favor [abre un issue](https://github.com/tu-usuario/launcher-admin-panel/issues) con:

- Descripci√≥n del problema
- Pasos para reproducir
- Comportamiento esperado vs actual
- Screenshots si es aplicable
- Informaci√≥n del entorno (OS, Python version, etc.)

## üìÑ Licencia

Este proyecto est√° bajo la Licencia MIT. Ver el archivo [LICENSE](LICENSE) para m√°s detalles.

## üí¨ Soporte

- **Documentation**: [Wiki del proyecto](https://github.com/tu-usuario/launcher-admin-panel/wiki)
- **Issues**: [GitHub Issues](https://github.com/tu-usuario/launcher-admin-panel/issues)
- **Discord**: [Canal de soporte](https://discord.gg/tu-canal)
- **Email**: admin@tu-dominio.com

## üôè Agradecimientos

- [Flask](https://flask.palletsprojects.com/) - Framework web
- [Bootstrap](https://getbootstrap.com/) - Framework CSS
- [Chart.js](https://www.chartjs.org/) - Gr√°ficos interactivos
- [SQLAlchemy](https://sqlalchemy.org/) - ORM para Python

---

<div align="center">

**[‚¨Ü Volver arriba](#-launcher-admin-panel)**

Made with ‚ù§Ô∏è for the gaming community

</div>